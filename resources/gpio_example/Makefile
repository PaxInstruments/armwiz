# Hello. I am armwiz, the most advanced ARM project generator. With
# my software capabilities at your command you are among the most
# powerful embedded ARM wizards in the universe. Use your new
# powers wisely. -armwiz
#                         ____
#                       .'* *.'
#                    __/_*_*(_
#                   / _______ \
#                  _\_)/___\(_/_
#                 / _((\- -/))_ \
#                 \ \())(-)(()/ /
#                  ' \(((()))/ '
#                 / ' \)).))/ ' \
#                / _ \ - | - /_  \
#               (   ( .;''';. .'  )
#               _\"__ /    )\ __"/_
#                 \/  \   ' /  \/
#                  .'  '...' ' )
#                   / /  |  \ \
#                  / .   .   . \
#                 /   .     .   \
#                /   /   |   \   \
#              .'   /    b    '.  '.
#          _.-'    /     Bb     '-. '-._
#      _.-'       |      BBb       '-.  '-.
#     (__________/\____.dBBBb.________)____)
#  █████╗ ██████╗ ███╗   ███╗██╗    ██╗██╗███████╗
# ██╔══██╗██╔══██╗████╗ ████║██║    ██║██║╚══███╔╝
# ███████║██████╔╝██╔████╔██║██║ █╗ ██║██║  ███╔╝
# ██╔══██║██╔══██╗██║╚██╔╝██║██║███╗██║██║ ███╔╝
# ██║  ██║██║  ██║██║ ╚═╝ ██║╚███╔███╔╝██║███████╗
# ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝     ╚═╝ ╚══╝╚══╝ ╚═╝╚══════╝
#                               by Pax Instruments

# Overview ==============================================================#
# This Makefile is automatically generated by armwiz.

# User Configuration ====================================================#
PROJECT_NAME=gpio_example
MAIN_SOURCE_FILE=main.c
LINKER_SCRIPT=myLinkerScript.ld

# Output files ==========================================================#
ELF_IMAGE=$(PROJECT_NAME).elf
BIN_IMAGE=$(PROJECT_NAME).bin

# Toolchain =============================================================#
CC=arm-none-eabi-gcc
OBJCOPY=arm-none-eabi-objcopy

# Compiler Flags ========================================================#
# Detailed arm-none-eabi-gcc compiler documentation can be found at
# https://www.mankier.com/1/arm-none-eabi-gcc

# Pre processor flags: The -D flag defines a compiler macro. This is the same as
# a '#define' statement in as included source file. For example, using
# '-D DEBUG_DISABLE' is the same as having '#define DEBUG_DISABLE' in your
# included source source code. Macros can also be defined with the '-D MY_VALUE=1'
# notation, which is the same as having '#define MY_VALUE=1' in an included source file.
CFLAGS=-D USE_STDPERIPH_DRIVER
CFLAGS+=-D STM32F10X_HD

# Linker Flags ==========================================================#
# -Wl,,option>
#    Pass option as an option to the linker. If option contains commas, it is split into
#    multiple options at the commas. You can use this syntax to pass an argument to the
#    option. For example, -Wl,-Map,output.map passes -Map output.map to the linker. When
#    using the GNU linker, you can also get the same effect with -Wl,-Map=output.map.
# TODO Call the linker and compiler separately. Use CCFLAGS and LDFLAGS.
CFLAGS+=-Wl,-T,$(LINKER_SCRIPT)

CFLAGS+=-Wall -g -mlittle-endian -mthumb -nostdlib -ffreestanding
CFLAGS+=-mcpu=cortex-m3

# Include Files =========================================================#
CFLAGS+=-I./
CFLAGS+=-Iinclude
CFLAGS+=-Icmsis
CFLAGS+=-Istm32-libraries

# Source Files ==========================================================#
#SRC=$(MAIN_SOURCE_FILE)
#SRC+=./system_stm32f10x.c
SRC=source/*.c
SRC+=stm32-libraries/misc.c
SRC+=stm32-libraries/stm32f10x_rcc.c
SRC+=stm32-libraries/stm32f10x_gpio.c

#========================================================================#
#STM32 startup file
STARTUP=./startup_stm32f10x_hd.s

# Make rules ============================================================#
STARTUP_OBJ = startup_stm32f10x_hd.o
#Make all
all: $(BIN_IMAGE)

$(BIN_IMAGE): $(ELF_IMAGE)
	$(OBJCOPY) -O binary $^ $@

$(ELF_IMAGE): $(SRC) $(STARTUP_OBJ)
	$(CC) $(CFLAGS) $^ -o $@

$(STARTUP_OBJ): $(STARTUP)
	$(CC) $(CFLAGS) $^ -c $(STARTUP)

clean:
	rm -rf *.bin *.elf *.o

flash:
	st-flash write $(BIN_IMAGE) 0x8000000
openocd:
	openocd -f "../commom/openocd.cfg"
gdb:
	arm-none-eabi-gdb -x ../commom/gdb_init.gdb
gdbtui:
	arm-none-eabi-gdb -tui -x ../commom/gdb_init.gdb
#========================================================================#
.PHONY:all clean flash
